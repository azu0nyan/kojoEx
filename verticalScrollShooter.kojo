/*Проект - вартикальный скролл шутер. 
Часть 1 - противники:
Для начала сделаем противников их будет несколько типов, они должны появляться и исчезать при выходе за границы экрана.
Требуется реализовать 3 вида противников:
1)Летят прямо, появляются в руппе из 5 штук. выстроенных в линию, появляются раз в 2000 кадров
2)Летят под углом. Появляются по одному, с шансом 1 /500
3)Летят прямо, потом "перестраиваются" в другой ряд, появляются раз в 1600 кадров.
Для хранения изображения противника и его типа можно использовать case class, но мы обойдмся парой (Тип, Картинка)
Для хранения всех противников создадим список:*/
var enemies: Seq[(String, Picture)] = Seq()
//Незабудем создать счетчик кадров
var frames = 0
 
//Дальнейший код будет в блоке animate(т.е. выполняться каждый кадр):
animate{
    //Незабываем увеличить счетчик
    frames += 1 
    //управление игроком/передвижение/выстрел игрока
    if(isKeyPressed(Kc.VK_A)){}
        
    //Добавление новых противников(на примере противников типа "CIRCLE"):
    if(frames % 50 == 0){
        val p = Picture.circle(10)
        p.draw()
        p.setPosition(300, random(-200, 200))//задаем случайное положение
        enemies = enemies :+ ("CIRCLE", p) //незабываем добавить нового врага в список
    }
 
 
    //Перемещение противников
    for((t, p) <- enemies){//перебираем пары (тип, каринка из списка)
        t match{//в зависимости от типа выбираем поведение картинки
            case "CIRCLE" => p.offset(-10, 0)
            case "SOME_OTHER_TYPE" => //поведение второго типа противников
            case x => println(s"Неизвестный тип противника $x")
        }
    }
    //И так далее(задание - допсать) 
  
    //передвижение пуль игрока и противников
    
    //проверка столкновения игрока с каким-либо противником или пулей
    
    //очищаем список противников от тех, в кого попали наши пули
    
    
    //проверяем условие победы(прошло время, набрано сколько-то очков 
}
