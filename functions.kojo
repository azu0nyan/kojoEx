/*
Часто бывает необходимо вынести отдельные вычисления или действия в отдельный блок кода, и дать им название.
Для этого существуют функции.

Синтаксис определения функции:
def название(имя1 : Тип1, имя2 : Тип2) : ТипОтвета = Выражение_типа_ТипОтвета
или 
имя1, имя2, ... - АРГУМЕНТЫ или ПАРАМЕТРЫ функции
Выражение_типа_ТипОтвета - ТЕЛО функции

Если функция ОПРЕДЕЛЕНА в программе, то она может быть ВЫЗВАНА с использованием
её названия, и выражение для аргументов прописанных в круглые скобочки.
 
Синтаксис вызова функции:
название(ВЫРАЖЕНИЕ_1, ВЫРАЖЕНИЕ_2, ...) 

Говорят что функция ПРИНИМАЕТ на вход аргументы, и ВОЗВРАЩАЕТ результат вычисления её тела. Точнее.
Вызов функции является выражением. При его вычислении, сначала будут
вычислены значения выражений его аргументов, после чего будет вычеслено тело
функции в которое подставлены вычисленные значения его аргументов. Результат
этого вычисления и является результатом вычисления вызова функции.
Примеры:
*/
var z = 3
def fun(x: Int) : Int = (x + 1) * x //Определение
var res = fun(z * z  + 2) //вызов 
//порядок вычисления
//fun(3 * 3 + 2) -> fun(9 + 2) -> fun(11) -> (11 + 1) * 11 -> 12 * 11 -> 132
//в итоге в res будет записано  132

var w = 4
def max(x: Int, y:Int):Int = { //Определение
  if(x > y) x 
  else y
}
var res2 = max(w, w - 3)//вызов
//порядок вычисления
//max(w, w - 3) -> max(4, 4 - 3) -> max(4, 1) -> if(4 > 1) 4 else 1 -> 4

var res3 = max(w, max(w + 3, w - 3))//вызов от вызова
//порядок вычисления
//max(w, max(w + 3, w - 3)) -> max(4, max(4 + 3, 4 - 3)) ->
//max(4, max(7, 4 - 3)) -> max(4, max(7, 1)) -> max(4, if(7 > 1) 7 else 1))->
//max(4, 7) -> if(4 > 7) 4 else 7 -> 7

/* println( area(2, 5))
Напишите функцию и вызовите её:
1)Принимает ширину  и высоту прямоуольника, возвращает площадь
2)Принимает название цвета возвращает true если название равно "синий"
Boolean 
3)Принимает ничего, возвращает случайное название книги(3+ разных названий)
4)Принимает номер месяца от 1 до 12, возвращает время года
1->Зима     4-> весна  11 -> осень
5)Принимает n, возвращает n!
6)Принимает x, y, возвращет x в степени y. 
x * x * ... * x           y раз
*/ 